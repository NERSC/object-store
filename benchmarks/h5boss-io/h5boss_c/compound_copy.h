#ifndef COMPOUND_COPY_H_
#define COMPOUND_COPY_H_
#include<hdf5.h>
#include<hdf5_hl.h>
#include<string.h>
typedef struct COADD
{
 float WAVE;
 float FLUX;
 float IVAR;
 int   AND_MASK;
 int   OR_MASK;
 float WAVEDISP;
 float SKY;
 float MODEL;
}COADD;

typedef struct EXPOSURE
{
 float WAVE;
 float FLUX;
 float IVAR;
 int   MASK;
 float WAVEDISP;
 float SKY;
 float X;
 float CALIB;
}EXPOSURE;
typedef struct ZLINE{
  int PLATE;
  int MJD;
  int FIBERID;
  char LINENAME[13];
  double LINEWAVE;
  float LINEZ;
  float LINEZ_ERR;
  float LINESIGMA;
  float LINESIGMA_ERR;
  float LINEAREA;
  float LINEAREA_ERR;
  float LINEEW;
  float LINEEW_ERR;
  float LINECONTLEVEL;
  float LINECONTLEVEL_ERR;
  int LINENPIXLEFT;
  int LINENPIXRIGHT;
  float LINEDOF;
  float LINECHI2;
}ZLINE;
typedef struct MATCH{
  char FLUX_OBJID[19];
  int RUN;
  int CAMCOL;
  int FIELD;
  int FLUX_ID;
  int THING_ID;
  char RERUN[3];
  int NOBSERVE;
  int NDETECT;
  double FLUX_RA;
  double FLUX_DEC;
  double MATCH_RA;
  double MATCH_DEC;
  char ORIG_OBJID[19];
  int ORIG_ID;
  double ORIG_RA;
  double ORIG_DEC;
  float APERFLUX3_R;
  float FIBERFLUX_R;
  float APERFLUX3_R_TOTAL;
  float APERFLUX3_R_MATCH;
  int FLUXMATCH_PARENT;
  int FLUXMATCH_STATUS;
  int FIBERID;
}MATCH;
typedef struct MATCHFLUX{
  char OBJID[19];
  char PARENTID[19];
  char FIELDID[19];
  unsigned SKYVERSION;
  unsigned MODE;
  unsigned CLEAN;
  int RUN;
  char RERUN[3];
  unsigned CAMCOL;
  int FIELD;
  int ID;
  int PARENT;
  int NCHILD;
  int OBJC_TYPE;
  float OBJC_PROB_PSF;
  int OBJC_FLAGS;
  int OBJC_FLAGS2;
  float OBJC_ROWC;
  float OBJC_ROWCERR;
  float OBJC_COLC;
  float OBJC_COLCERR;
  float ROWVDEG;
  float ROWVDEGERR;
  float COLVDEG;
  float COLVDEGERR;
  float ROWC[5];
  float ROWCERR[5];
  float COLC[5];
  float COLCERR[5];
  float PETROTHETA[5];
  float PETROTHETAERR[5];
  float PETROTH50[5];
  float PETROTH50ERR[5];
  float PETROTH90[5];
  float PETROTH90ERR[5];
  float Q[5];
  float QERR[5];
  float U[5];
  float UERR[5];
  float M_E1[5];
  float M_E2[5];
  float M_E1E1ERR[5];
  float M_E1E2ERR[5];
  float M_E2E2ERR[5];
  float M_RR_CC[5];
  float M_RR_CCERR[5];
  float M_CR4[5];
  float M_E1_PSF[5];
  float M_E2_PSF[5];
  float M_RR_CC_PSF[5];
  float M_CR4_PSF[5];
  float THETA_DEV[5];
  float THETA_DEVERR[5];
  float AB_DEV[5];
  float AB_DEVERR[5];
  float THETA_EXP[5];
  float THETA_EXPERR[5];
  float AB_EXP[5];
  float AB_EXPERR[5];
  float FRACDEV[5];
  int FLAGS[5];
  int FLAGS2[5];
  int TYPE[5];
  float PROB_PSF[5];
  int NPROF[5];
  float PROFMEAN_NMGY[75];
  float PROFERR_NMGY[75];
  float STAR_LNL[5];
  float EXP_LNL[5];
  float DEV_LNL[5];
  int PSP_STATUS[5];
  float PIXSCALE[5];
  double RA;
  double DEC;
  double CX;
  double CY;
  double CZ;
  double RAERR;
  double DECERR;
  double L;
  double B;
  float OFFSETRA[5];
  float OFFSETDEC[5];
  float PSF_FWHM[5];
  int MJD;
  float AIRMASS[5];
  float PHI_OFFSET[5];
  float PHI_DEV_DEG[5];
  float PHI_EXP_DEG[5];
  float EXTINCTION[5];
  float SKYFLUX[5];
  float SKYFLUX_IVAR[5];
  float PSFFLUX[5];
  float PSFFLUX_IVAR[5];
  float PSFMAG[5];
  float PSFMAGERR[5];
  float FIBERFLUX[5];
  float FIBERFLUX_IVAR[5];
  float FIBERMAG[5];
  float FIBERMAGERR[5];
  float FIBER2FLUX[5];
  float FIBER2FLUX_IVAR[5];
  float FIBER2MAG[5];
  float FIBER2MAGERR[5];
  float CMODELFLUX[5];
  float CMODELFLUX_IVAR[5];
  float CMODELMAG[5];
  float CMODELMAGERR[5];
  float MODELFLUX[5];
  float MODELFLUX_IVAR[5];
  float MODELMAG[5];
  float MODELMAGERR[5];
  float PETROFLUX[5];
  float PETROFLUX_IVAR[5];
  float PETROMAG[5];
  float PETROMAGERR[5];
  float DEVFLUX[5];
  float DEVFLUX_IVAR[5];
  float DEVMAG[5];
  float DEVMAGERR[5];
  float EXPFLUX[5];
  float EXPFLUX_IVAR[5];
  float EXPMAG[5];
  float EXPMAGERR[5];
  float APERFLUX[40];
  float APERFLUX_IVAR[40];
  int CLOUDCAM[5];
  int CALIB_STATUS[5];
  float NMGYPERCOUNT[5];
  float NMGYPERCOUNT_IVAR[5];
  double TAI[5];
  int RESOLVE_STATUS;
  int THING_ID;
  int IFIELD;
  int BALKAN_ID;
  int NOBSERVE;
  int NDETECT;
  int NEDGE;
  float SCORE;
  int FIBERID;
}MATCHFLUX;
typedef struct MATCHPOS{
  char OBJID[19];
  char PARENTID[19];
  char FIELDID[19];
  unsigned SKYVERSION;
  unsigned MODE;
  unsigned CLEAN;
  int RUN;
  char RERUN[3];
  unsigned CAMCOL;
  int FIELD;
  int ID;
  int PARENT;
  int NCHILD;
  int OBJC_TYPE;
  float OBJC_PROB_PSF;
  int OBJC_FLAGS;
  int OBJC_FLAGS2;
  float OBJC_ROWC;
  float OBJC_ROWCERR;
  float OBJC_COLC;
  float OBJC_COLCERR;
  float ROWVDEG;
  float ROWVDEGERR;
  float COLVDEG;
  float COLVDEGERR;
  float ROWC[5];
  float ROWCERR[5];
  float COLC[5];
  float COLCERR[5];
  float PETROTHETA[5];
  float PETROTHETAERR[5];
  float PETROTH50[5];
  float PETROTH50ERR[5];
  float PETROTH90[5];
  float PETROTH90ERR[5];
  float Q[5];
  float QERR[5];
  float U[5];
  float UERR[5];
  float M_E1[5];
  float M_E2[5];
  float M_E1E1ERR[5];
  float M_E1E2ERR[5];
  float M_E2E2ERR[5];
  float M_RR_CC[5];
  float M_RR_CCERR[5];
  float M_CR4[5];
  float M_E1_PSF[5];
  float M_E2_PSF[5];
  float M_RR_CC_PSF[5];
  float M_CR4_PSF[5];
  float THETA_DEV[5];
  float THETA_DEVERR[5];
  float AB_DEV[5];
  float AB_DEVERR[5];
  float THETA_EXP[5];
  float THETA_EXPERR[5];
  float AB_EXP[5];
  float AB_EXPERR[5];
  float FRACDEV[5];
  int FLAGS[5];
  int FLAGS2[5];
  int TYPE[5];
  float PROB_PSF[5];
  int NPROF[5];
  float PROFMEAN_NMGY[75];
  float PROFERR_NMGY[75];
  float STAR_LNL[5];
  float EXP_LNL[5];
  float DEV_LNL[5];
  int PSP_STATUS[5];
  float PIXSCALE[5];
  double RA;
  double DEC;
  double CX;
  double CY;
  double CZ;
  double RAERR;
  double DECERR;
  double L;
  double B;
  float OFFSETRA[5];
  float OFFSETDEC[5];
  float PSF_FWHM[5];
  int MJD;
  float AIRMASS[5];
  float PHI_OFFSET[5];
  float PHI_DEV_DEG[5];
  float PHI_EXP_DEG[5];
  float EXTINCTION[5];
  float SKYFLUX[5];
  float SKYFLUX_IVAR[5];
  float PSFFLUX[5];
  float PSFFLUX_IVAR[5];
  float PSFMAG[5];
  float PSFMAGERR[5];
  float FIBERFLUX[5];
  float FIBERFLUX_IVAR[5];
  float FIBERMAG[5];
  float FIBERMAGERR[5];
  float FIBER2FLUX[5];
  float FIBER2FLUX_IVAR[5];
  float FIBER2MAG[5];
  float FIBER2MAGERR[5];
  float CMODELFLUX[5];
  float CMODELFLUX_IVAR[5];
  float CMODELMAG[5];
  float CMODELMAGERR[5];
  float MODELFLUX[5];
  float MODELFLUX_IVAR[5];
  float MODELMAG[5];
  float MODELMAGERR[5];
  float PETROFLUX[5];
  float PETROFLUX_IVAR[5];
  float PETROMAG[5];
  float PETROMAGERR[5];
  float DEVFLUX[5];
  float DEVFLUX_IVAR[5];
  float DEVMAG[5];
  float DEVMAGERR[5];
  float EXPFLUX[5];
  float EXPFLUX_IVAR[5];
  float EXPMAG[5];
  float EXPMAGERR[5];
  float APERFLUX[40];
  float APERFLUX_IVAR[40];
  int CLOUDCAM[5];
  int CALIB_STATUS[5];
  float NMGYPERCOUNT[5];
  float NMGYPERCOUNT_IVAR[5];
  double TAI[5];
  int RESOLVE_STATUS;
  int THING_ID;
  int IFIELD;
  int BALKAN_ID;
  int NOBSERVE;
  int NDETECT;
  int NEDGE;
  float SCORE;
  int FIBERID;

}MATCHPOS;
typedef struct ZBEST{
  int PLATE;
  int TILE;
  int MJD;
  int FIBERID;
  char RUN2D[6];
  char RUN1D[6];
  int OBJID[5];
  char OBJTYPE[16];
  double PLUG_RA;
  double PLUG_DEC;
  char CLASS[6];
  char SUBCLASS[21];
  float Z;
  float Z_ERR;
  float RCHI2;
  int DOF;
  float RCHI2DIFF;
  char TFILE[24];
  int TCOLUMN[10];
  int NPOLY;
  float THETA[10];
  float THETA_COVAR[100];
  float VDISP;
  float VDISP_ERR;
  float VDISPZ;
  float VDISPZ_ERR;
  float VDISPCHI2;
  float VDISPNPIX;
  int VDISPDOF;
  float WAVEMIN;
  float WAVEMAX;
  float WCOVERAGE;
  int ZWARNING;
  float SN_MEDIAN[5];
  float SN_MEDIAN_ALL;
  float CHI68P;
  float FRACNSIGMA[10];
  float FRACNSIGHI[10];
  float FRACNSIGLO[10];
  float SPECTROFLUX[5];
  float SPECTROFLUX_IVAR[5];
  float SPECTROSYNFLUX[5];
  float SPECTROSYNFLUX_IVAR[5];
  float SPECTROSKYFLUX[5];
  int ANYANDMASK;
  int ANYORMASK;
  float SPEC1_G;
  float SPEC1_R;
  float SPEC1_I;
  float SPEC2_G;
  float SPEC2_R;
  float SPEC2_I;
  char ELODIE_FILENAME[16];
  char ELODIE_OBJECT[8];
  char ELODIE_SPTYPE[12];
  float ELODIE_BV;
  float ELODIE_TEFF;
  float ELODIE_LOGG;
  float ELODIE_FEH;
  float ELODIE_Z;
  float ELODIE_Z_ERR;
  float ELODIE_Z_MODELERR;
  float ELODIE_RCHI2;
  int ELODIE_DOF;
  float Z_NOQSO;
  float Z_ERR_NOQSO;
  int ZNUM_NOQSO;
  int ZWARNING_NOQSO;
  char CLASS_NOQSO[6];
  char SUBCLASS_NOQSO[19];
  float RCHI2DIFF_NOQSO;
  float VDISP_LNL[35];
  long SPECOBJID;
}ZBEST;
typedef struct PLUGMAP{
  int OBJID[5];
  char HOLETYPE[6];
  double RA;
  double DEC;
  float MAG[5];
  float STARL;
  float EXPL;
  float DEVAUCL;
  char OBJTYPE[16];
  double XFOCAL;
  double YFOCAL;
  int SPECTROGRAPHID;
  int FIBERID;
  int THROUGHPUT;
  int PRIMTARGET;
  int SECTARGET;
  int OFFSETID;
  float SCI_EXPTIME;
  char SOURCETYPE[15];
  float LAMBDA_EFF;
  float ZOFFSET;
  int BLUEFIBER;
  long BOSS_TARGET1;
  long BOSS_TARGET2;
  long ANCILLARY_TARGET1;
  long ANCILLARY_TARGET2;
  int RUN;
  char RERUN[4];
  int CAMCOL;
  int FIELD;
  int ID;
  float CALIBFLUX[5];
  float CALIBFLUX_IVAR[5];
  int CALIB_STATUS[5];
  float SFD_EBV;
}PLUGMAP;
//typedef enum { false; true } bool;
void compound_read(char * src_file, hid_t dst_file, char * path_table, int write,int rank);
void compound_write(hid_t dst_file,char * grp, const char * table_name, hsize_t nrecords, size_t type_size, const size_t * field_offsets, const size_t * field_sizes, void * data);
//void compound_read(char * src_file;char * dst_file; char * path_table; bool write);
//void compound_write(char * dst_file;char * grp; const char * table_name; hsize_t nrecords;size_t type_size; const size_t * field_offsets; const size_t * field_sizes;void * data);
void print_record_cad(hsize_t nrecords, COADD * data);
void print_record_exp(hsize_t nrecords, EXPOSURE * data);
#endif
