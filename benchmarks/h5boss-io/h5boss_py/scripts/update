#!/usr/bin/env python
"""
Create an HDF5 file from BOSS data

TODO:
  - include comments in meta/attrs
  - platelist quantities
"""
from __future__ import division, print_function
#from __future__ import absolute_import
from h5boss.select import select
from h5boss.select_add import select_add
from h5boss.select_update import select_update
from h5boss.pmf import pmf
import sys,os
import time
import optparse
import csv
import traceback


import argparse

parser = argparse.ArgumentParser(prog='update',description='Compare base with pmf, add the new plates/mjds/fibers founded in both (pmf,input) into the pre-selected HDF5 base file, then remove the plates/mjds/fibers in pre-selected HDF5 base file that are not found in pmf')
parser.add_argument("base", help="Pre-selected HDF5 file")
parser.add_argument("input",  help="HDF5 input list")
parser.add_argument("pmf",    help="Plate/mjd/fiber list in csv")
parser.add_argument("--repack",	help="repack after changing the file")
opts=parser.parse_args()

pmflist = opts.pmf
infiles = opts.input
outfile = opts.base
if opts.repack:
   print ("repacking")
tstart=time.time()
import pandas as pd
try: 
 df = pd.read_csv(pmflist,delimiter=' ',names=["plates","mjds","fibers"],index_col=None,dtype=str)
 plates = map(str,df['plates'].values.tolist())
 mjds = map(str,df['mjds'].values.tolist())
 fibers = map(str,df['fibers'].values.tolist())
except Exception, e:
 print("pmf csv read error or not exist:%s"%e,pmflist)
 print("e.g., 1st row of csv should be 'plates mjds fibers'")
 sys.exit(0)
try:
 with open(infiles,'rb') as f:
  reader = csv.reader(f)
  infile = list(reader)

except Exception, e:
 print ("CSV file open error or not exist: %s"%e,infiles)
 sys.exit(0)
 #traceback.print_exc()

infile = [x for sublist in infile for x in sublist]
#print ("Plates: ",plates)
#print ("MJDs: ",mjds)
#print ("Fibers: ", fibers)
if(len(plates)==0 or len(infile)==0):
  print("pmf or input is empty")
  sys.exit(0)

print ("Plates/Mjds/Fibers: %d tuples"%len(plates))
#print ("Input: %d files:"%len(infile),infile[0],"...",infile[-1])
print ("Input: %d files"%len(infile))
print ("Output: ", outfile)
print ("Running selection:")

try:
 select_update(infile, outfile, plates, mjds, fibers)
#add to the pre-existing outfile
except Exception, e:
 print ("Error in select:")
 traceback.print_exc()


print ("Done selection")
